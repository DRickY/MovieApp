included: # paths to include during linting. `--path` is ignored if present.
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Build
  - fastlane
  - Pods

force_unwrapping:
  severity: error
force_try:
  severity: error

type_name:
  validate_protocols: false
  min_length: 2 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
function_parameter_count:
  warning: 7
  error: 8
cyclomatic_complexity:
  warning: 10
  error: 15
reporter: "xcode"

disabled_rules: # rule identifiers to exclude from running
  - identifier_name
  - control_statement
  - missing_docs
  - trailing_whitespace
  - redundant_void_return
  - function_body_length 
  - file_length
  - line_length
  - nesting
  - type_body_length
  - vertical_parameter_alignment
  - redundant_objc_attribute
  - syntactic_sugar
  - multiple_closures_with_trailing_closure
  - inclusive_language
  - large_tuple
opt_in_rules: # some rules are only opt-in
  - cyclomatic_complexity
  - empty_count
  - force_unwrapping
  - force_try
  - force_cast
  - array_init
  - class_delegate_protocol
  - closure_end_indentation
  - collection_alignment
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - empty_collection_literal
  - empty_string
  - empty_xctest_method
  - fatal_error_message
  - flatmap_over_map_reduce
  - identical_operands
  - identifier_name
  - joined_default_parameter
  - last_where
  - legacy_cggeometry_functions
  - legacy_random
  - line_length
  - literal_expression_end_indentation
  - nesting
  - nimble_operator
  - no_space_in_method_call
  - overridden_super_call
  - override_in_extension
  - private_over_fileprivate
  - private_unit_test
  - prohibited_super_call
  - protocol_property_accessors_order
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - reduce_into
  - redundant_discardable_let
  - redundant_nil_coalescing
  - redundant_optional_initialization
  - redundant_void_return
  - required_enum_case
  - return_arrow_whitespace
  - single_test_class
  - sorted_first_last
  - statement_position
  - static_operator
  - unowned_variable_capture
  - unused_enumerated
  - xct_specific_matcher
  - xctfail_message
  - yoda_condition

analyzer_rules:
  - unused_import
  - unused_declaration

custom_rules:
  application_bundle_nil:
    included: ".*.swift" 
    name: "Application bundle" 
    regex: '(bundle\s?:\s?nil)' # matching pattern
    message: "Use Bundle(for: type(of: self)) or Bundle.main" 
    severity: error 
  application_image:
    included: ".*.swift" 
    name: "Application image" 
    regex: '((UIImage\s?\(named:\s?"[^"]+"\))|(UIImage\s?\(named:\s?[^,]+\)))' # If you see false errors may be bugs here
    message: "Use UIImage.bundled(_:in:) or UIImage(named:in:compatibleWith:)" 
    severity: error
  application_image_literal:
    included: ".*.swift" 
    name: "Application image" 
    regex: '(#imageLiteral)' # If you see false errors may be bugs here
    message: "Use UIImage.bundled(_:in:) or UIImage(named:in:compatibleWith:)" 
    severity: error
